<Window x:Class="WPF_IT008_test.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WPF_IT008_test"
        mc:Ignorable="d"
        Title="MB Bank" Height="450" Width="800"
        Icon="/Assets/MB Bank.ico">
    <!--<Grid>
        
    -->
    <!--<Button Content="Button"
                FontFamily="Araial"
                FontSize="36"
                VerticalAlignment="Center"
                HorizontalAlignment="Center"
                Width="150"
                Height="50"
                Click="Button_Click"
                >
            <Button.Background>
                <ImageBrush ImageSource="https://pngimg.com/d/buttons_PNG37.png"/>
            </Button.Background>
        </Button>

        <TextBlock x:Name="textBlock"
                   VerticalAlignment="Top">
        </TextBlock>

        <TextBox x:Name="textBox"
                 VerticalAlignment="Bottom"
                 TextChanged="textChanged">
        </TextBox>-->

    <!--<PasswordBox PasswordChar="*"
                     Width="200"
                     Height="100">
        </PasswordBox>-->

    <!--Binding (một kiến thức nhỏ):
        Giúp chuyển text từ textBox sang textBox khac mà không cần code trong file.xaml.cs
        
        Mode:
        1. One time: Chỉ cập nhật 1 lần duy nhất lúc chạy ctrinh
        2. One way: Chỉ cập nhật 1 chiều từ source sang đích
        3. One way to source: Cập nhật 1 chiều từ đích sang source
        4. Two way: Cập nhật 2 chiều nhưng từ đích sang source phải bấm vào ô source mới load-->

    <!--<TextBox x:Name="textSource"
                 VerticalAlignment="Top" Text="{Binding ButtonName}"> </TextBox>
        <TextBox x:Name="textBinding"
                   VerticalAlignment="Center"
                   Text="{Binding Path=Text, ElementName=textSource, Mode=TwoWay}"> </TextBox>
        <Button x:Name="button"
                Content="{Binding ButtonName}"
                VerticalAlignment="Bottom"></Button>-->

    <!--</Grid>-->


    <!--############# GRID #################
        Do Window kế thừa từ ContentControl nên chỉ có thể chứa 1 con trực tiếp là 1 thẻ hoặc
        một content property. Nếu muốn có nhiều thẻ thì phải dùng gián tiếp bỏ vào container như
        grid, stackPanel, DockPanel, Canvas...-->

    <!--<Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="2*"/>
            <RowDefinition Height="2*"/>
        </Grid.RowDefinitions>
        -->
    <!--Cách 1: Dùng trực tiếp Grid chính-->
    <!--
        <Grid.ColumnDefinitions>
            <ColumnDefinition  />
            <ColumnDefinition  />
            <ColumnDefinition  />
            <ColumnDefinition  />
        </Grid.ColumnDefinitions>

        <Button Content="1" FontSize="100" Grid.Column="0"></Button>
        <Button Content="2" FontSize="100" Grid.Column="1"></Button>
        -->
    <!--Phải thêm Grid.Row để xác định nút nằm ở hàng nào, nếu không thì sẽ mặc định là Grid.Row="0"-->
    <!--<Button Content="3" FontSize="100" Grid.Column="0" Grid.Row="1"></Button>-->
    <!--Grid.ColumnSpan là số ô mà ô đó sẽ chiếm, bắt đầu từ ô đó kéo sang phải
        Vd Grid.ColumnSpan="2" thì nút sẽ chiếm 2 ô-->
    <!--
        <Button Content="4" FontSize="100" Grid.Column="1" Grid.Row="1" Grid.ColumnSpan="2"></Button>

        -->
    <!--Cách 2: Dùng thêm 2 Grid con-->
    <!--<Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Button Content="1" FontSize="100" Grid.Column="0"></Button>
            <Button Content="2" FontSize="100" Grid.Column="1"></Button>
        </Grid>

        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Button Content="3" FontSize="100" Grid.Column="0"></Button>
            <Button Content="4" FontSize="100" Grid.Column="1"></Button>
        </Grid>-->
    <!--


    </Grid>-->


    <!--<Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            -->
    <!--Cái ở giữa dùng làm grid splitter: Điều chỉnh độ rộng của 2 cột bên cạnh-->
    <!--
            <ColumnDefinition Width="10"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>

        <Button Content="1" Grid.Column="0" FontSize="100"> </Button>
        -->
    <!--Thêm HorizontalAlignment="Stretch" sẽ giúp điều chỉnh được độ rộng của 2 cột bên cạnh
        Nếu ko có chỉ có thể kéo sang trái. Đồng thời làm độ rộng của 2 cột giảm-->
    <!--
        <GridSplitter Grid.Column="1" Width="10" HorizontalAlignment="Stretch" ></GridSplitter>
        <Button Content="2" Grid.Column="2" FontSize="100"></Button>
    </Grid>-->


    <!--####### MARGIN ########-->
    <!--<Grid>
        <Button Content="Button"
                FontSize="20"
                HorizontalAlignment="Left"
                Margin="50">    </Button>
    </Grid>-->

    <!--<Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition></ColumnDefinition>
            <ColumnDefinition></ColumnDefinition>
            <ColumnDefinition></ColumnDefinition>    
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition></RowDefinition>
            <RowDefinition></RowDefinition>
            <RowDefinition></RowDefinition>
        </Grid.RowDefinitions>

        <Button Grid.Column="1" Grid.Row="1" Margin="10"></Button>
        <Button HorizontalAlignment="Center" Grid.Column="2" Grid.Row="0" Margin="40"></Button>
        <Button Grid.Column="0" Grid.Row="2" Margin="10, 14, 21, 50"></Button>
    </Grid>-->

    <!--1. Nếu như có margin mà không có width thì nút sẽ tự động co giãn theo margin
    2. Nếu có margin và horizontalalignment left thì nó sẽ dịch sang trái,  text co lại sang
    trái và không quan tâm đến margin bên phải-->
    <!--Có thể thấy ở ô (2, 0) có HorizontalAlignment ="Center" nên nút sẽ nằm giữa ô và ko quan tâm đến margin
    trái và phải -> HorizontalAlignment luôn ưu tiên hơn margin (tương tự với VertialAlignment)-->



    <!--######## PADDING #############-->
    <!--<Grid>
        <Button Content="Button"
                FontSize="40"
                Width="200" Height="100"
                Padding="0,0,0,20">    </Button>
    </Grid>

    Padding thêm vào một lớp đệm trong element, ứng dụng: Căn chỉnh vị trí của text trong element đó-->


    <!--############## STACKPANEL ##############-->
    <!--Là một container giống Grid nhưng các element được sắp xếp theo thứ tự liền kề nhau-->

    <!--<StackPanel Orientation="Horizontal" Height="80">
        <Button Content="Lê Thành Nghĩa UIT đzai"> </Button>
        <Button Content="Lê Thành Nghĩa UIT đzai"></Button>
        <Button Content="Lê Thành Nghĩa UIT đzai"></Button>
        <Button Content="Lê Thành Nghĩa UIT đzai"></Button>
        <Button Content="Lê Thành Nghĩa UIT đzai" Height="50"></Button>
        <Button Content="Lê Thành Nghĩa UIT đzai"></Button>
        <Button Content="Lê Thành Nghĩa UIT đzai"></Button>
        <Button Content="Lê Thành Nghĩa UIT đzai"></Button>
        <Button Content="Lê Thành Nghĩa UIT đzai"></Button>
    </StackPanel>-->



    <!--############# WRAPPANEL #############-->
    <!--Cũng giống như Stackpanel nhưng các text trong element sẽ wrap lại khiến cho element không
    bị tràn ra ngoài như StackPanel-->

    <!--<WrapPanel>
        <Button Content="Lê Thành Nghĩa UIT đzai"></Button>
        <Button Content="Lê Thành Nghĩa UIT đzai"></Button>
        <Button Content="Lê Thành Nghĩa UIT đzai"></Button>
        <Button Content="Lê Thành Nghĩa UIT đzai"></Button>
        <Button Content="Lê Thành Nghĩa UIT đzai" Height="50"></Button>
        <Button Margin="20" Content="Lê Thành Nghĩa UIT đzai"></Button>
        <Button Content="Lê Thành Nghĩa UIT đzai"></Button>
        <Button Content="Lê Thành Nghĩa UIT đzai"></Button>
        <Button Content="Lê Thành Nghĩa UIT đzai"></Button>
    </WrapPanel>-->

    <!--Nếu chỉnh Margin thì các thẻ bên cạnh tự động điều chỉnh vị trí cho phù hợp-->



    <!--############ DOCK PANEL #############-->
    <!--Element mặc định sẽ nằm bên trái (Dockpanel.Dock="Left") và con cuối cùng sẽ lắp đầy phần còn lại (LastChildFill="True")
    DockPanel sẽ dock element về 1 hướng nào đó-->
    <!--<DockPanel LastChildFill="True">
        <Button DockPanel.Dock="Top" Content="1" FontSize="50"></Button>
        <Button DockPanel.Dock="Bottom" Content="2" FontSize="50"></Button>
        <Button DockPanel.Dock="Left" Content="3" FontSize="50"></Button>
        <Button DockPanel.Dock="Right" Content="4" FontSize="50"></Button>
        <Button Content="5" FontSize="50"></Button>
    </DockPanel>-->



    <!--############ CANVAS ##############-->
    <!--Canvas có thể dễ dàng thay đổi vị trí của các elment chồng lên nhau bằng Panel.ZIndex
    Ngoài ra Canvas cũng có Canvas.Left, Canvas.Top, Canvas.Right, Canvas.Bottom để xác định vị trí tuyệt đối-->
    <!--<Canvas>
        <Button x:Name="Button1"
                Click="Button1_Click"
                Content="1" FontSize="50"
                Width="200" Height="100"
                Canvas.Top="240" Canvas.Left="200" ></Button>
        <Button x:Name="Button2"
                Click="Button2_Click"
                Content="2" FontSize="50"
                Width="200" Height="100"
                Canvas.Bottom="140" Canvas.Right="300"
                Panel.ZIndex="-1"></Button>

        <Ellipse Fill="Red" 
                 Width="100" Height="100"></Ellipse>
    </Canvas>-->


    <!--########## BORDER #############-->
    <!--<Grid>
        <Grid Width="300" Margin="30">
            <Border BorderBrush="Green" BorderThickness="3">
                <StackPanel Background="Red">
                    <Button Content="1" Width="300"></Button>
                    <Button Content="1" Width="300"></Button>
                    <Button Content="1" Width="300"></Button>
                    <Button Content="1" Width="300"></Button>
                    <Button Content="1" Width="300"></Button>
                </StackPanel>
            </Border>
        </Grid>
    </Grid>-->
    <!--Border chỉ có thể chứa 1 element nên không thể đặt trong StackPanel, nếu ko thì sẽ bao quanh Grid
    Nên chúng ta sẽ đặt border trong grid và set width cho grid để border không bị
    
    Visibility = "Hidden" -> Tất cả mọi thứ trong border và cả border đều bị ẩn đi (vẫn còn đó)
    Víibility = "Collapsed" -> Tất cả mọi thứ trong border và cả border tạm thời biến mất (bị thu hồi tạm thời)-->


    <!--############ SCROLLVIEWER #############-->

    <!--<Grid ScrollViewer.HorizontalScrollBarVisibility="">
        <StackPanel>
            <Button Content="Button"></Button>
            <Button Content="Button"></Button>
            <Button Content="Button"></Button>
            <Button Content="Button"></Button>
            <Button Content="Button"></Button>
            <Button Content="Button"></Button>
            <Button Content="Button"></Button>
            <Button Content="Button"></Button>
            <Button Content="Button"></Button>
        </StackPanel>
    </Grid>-->
    <!--   => Không xài đc-->


    <!--<Grid>
        <Grid Width="200">
            <ScrollViewer x:Name="scvMain" VerticalScrollBarVisibility="Auto">
                <StackPanel>
                    <Button Content="Button"></Button>
                    <Button Content="Button"></Button>
                    <Button Content="Button"></Button>
                    <Button Content="Button"></Button>
                    <Button Content="Button"></Button>
                    <Button Content="Button"></Button>
                    <Button Content="Button"></Button>
                    <Button Content="Button"></Button>
                    <Button Content="Button"></Button>
                    <Button Content="Button"></Button>
                    <Button Content="Button"></Button>
                    <Button Content="Button"></Button>
                    <Button Content="Button"></Button>
                    <Button Content="Button"></Button>
                    <Button Content="Button"></Button>
                    <Button Content="Button"></Button>
                    <Button Content="Button"></Button>
                    <Button Content="Button"></Button>
                    <Button Content="Button"></Button>
                    <Button Content="Button"></Button>
                    <Button Content="Button"></Button>
                    <Button Content="Button"></Button>
                    <Button Content="Button"></Button>
                    <Button Content="Button"></Button>
                    <Button Content="Button"></Button>
                    <Button Content="Button"></Button>
                    <Button Content="Button"></Button>
                    <Button Content="Button"></Button>
                    <Button Content="Button"></Button>
                    <Button Content="Button"></Button>
                </StackPanel>
            </ScrollViewer>

        </Grid>
        <Button Content="Button"
                Width="200" Height="100"
                Click="Button_Click"
                Margin="0,100,500,0"
                >
        </Button>
    </Grid>-->
    <!--VerticlalScrollBarVisibility="Auto": Tự động hiện thanh cuộn khi cần thiết (ko có nhiều element thì ko hiện)-->

    <!--############# CHECK BOX #############-->
    <!--<CheckBox Content="This is a checkbox, isn't it?"
              FontSize="30"
              ></CheckBox>-->

    <!--FontSize chỉ có thể thay đổi kích thước của chữ chứ ko làm thay đổi kich thước của checkbox
    -> Cách 2: Dùng viewBox-->

    <!--<Grid>
        <Viewbox Width="300" Height="50"
                 HorizontalAlignment="Center"
                 VerticalAlignment="Top">
            <CheckBox x:Name="checkBox" 
                      Content="Is this the check box 2?"></CheckBox>
        </Viewbox>

        <Button Content="Submit"
                Width="200" Height="80"
                FontSize="30"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Click="Button_Click"> </Button>
    </Grid>-->
    
    <!--########### RADIO BUTTON ############-->
    <!--<StackPanel >
        <Border BorderBrush="Green" BorderThickness="2" Margin="5">
            <StackPanel>
                <RadioButton  IsChecked="True" Content="Le Thanh Nghia dep zai"></RadioButton>
                <RadioButton Content="Chi Nguyen dep zai"></RadioButton>
                <RadioButton Content="Chi Nguyen bi ngoo"></RadioButton>
            </StackPanel>
        </Border>

        <Border x:Name="borderMain" BorderBrush="Green" BorderThickness="2" Margin="5" Visibility="Hidden">
            <StackPanel>
                <RadioButton Content="Le Thanh Nghia dep zai"></RadioButton>
                <RadioButton Content="Chi Nguyen dep zai"></RadioButton>
                <RadioButton Content="Chi Nguyen bi ngoo"></RadioButton>
            </StackPanel>
        </Border>

        <Border BorderBrush="Green" BorderThickness="2" Margin="5">
            <StackPanel>
                <RadioButton Content="Le Thanh Nghia dep zai"></RadioButton>
                <RadioButton Content="Chi Nguyen dep zai"></RadioButton>
                <RadioButton Content="Chi Nguyen bi ngoo"></RadioButton>
            </StackPanel>
        </Border>

        <Button Content="Button"
                Width="150" Height="40"
                FontSize="28"
                Click="Button_Click">

        </Button>
    </StackPanel>-->
    
    
    <!--########### TOGGLE BUTTON ###########-->
    <!--<Grid>
        <ToggleButton Width="200" Height="60"
                      Content="Toggle Button"
                      FontSize="27" FontFamily="Arial"
                      ClickMode="Hover"
                      >
        </ToggleButton>
    </Grid>-->
    <!--Nút đổi màu khi tương tác (tùy vào clickMode)-->


    <!--######## IMAGE #########-->

    <!--<StackPanel>
        <TextBox Text="{Binding Path=Source, ElementName=img}">

        </TextBox>

        <Button Content="5">
            
        </Button>

        <Image x:Name="img"
            Source="/Assets/SceneImage.jpg"
            Stretch="Uniform">

        </Image>
    </StackPanel>-->

    
    
    <!--########## STYLE ##########-->
    
    
    










</Window>